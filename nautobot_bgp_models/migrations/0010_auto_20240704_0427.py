# Generated by Django 3.2.24 on 2024-07-04 04:27

import django.core.serializers.json
from django.db import migrations, models
import django.db.models.deletion
import nautobot.extras.models.mixins
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('ipam', '0046_update_all_charfields_max_length_to_255'),
        ('nautobot_bgp_models', '0009_autonomoussystemrange'),
    ]

    operations = [
        migrations.AddField(
            model_name='peergrouptemplate',
            name='vrf',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='peer_group_templates', to='ipam.vrf'),
        ),
        migrations.CreateModel(
            name='PeerGroupTemplateAddressFamily',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('_custom_field_data', models.JSONField(blank=True, default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder)),
                ('extra_attributes', models.JSONField(blank=True, encoder=django.core.serializers.json.DjangoJSONEncoder, null=True)),
                ('afi_safi', models.CharField(max_length=64)),
                ('import_policy', models.CharField(blank=True, default='', max_length=100)),
                ('export_policy', models.CharField(blank=True, default='', max_length=100)),
                ('multipath', models.BooleanField(blank=True, null=True)),
                ('peer_group_template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='address_families', to='nautobot_bgp_models.peergrouptemplate')),
            ],
            options={
                'verbose_name': 'BGP peer-group template address family',
                'verbose_name_plural': 'BGP Peer-Group Template Address Families',
                'ordering': ['-peer_group_template'],
                'unique_together': {('peer_group_template', 'afi_safi')},
            },
            bases=(models.Model, nautobot.extras.models.mixins.DynamicGroupMixin, nautobot.extras.models.mixins.NotesMixin),
        ),
    ]
